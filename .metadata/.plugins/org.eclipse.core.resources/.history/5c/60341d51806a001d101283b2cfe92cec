package job_portal_system;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.Serializable;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

public class HomePage2 implements ActionListener , Serializable {
	JFrame frame = new JFrame();
	JLabel Message = new JLabel();
	JLabel Message2 = new JLabel();
	JLabel Message3 = new JLabel();
	JTextField textfield = new JTextField();
	JTextField textfield2 = new JTextField();
	JButton changepass = new JButton("OK");
	JButton addpositionOk = new JButton("OK");
	JButton deletepositionOk = new JButton("OK");
	/*positions */
	 JTextField PositionNameInput = new JTextField();
	JTextField PositionRequirements = new JTextField();
	 JTextField CompanyName= new JTextField();
	
	JLabel PositionName = new JLabel();
	JLabel PositionReq = new JLabel();
	JLabel CompanyN= new JLabel();
	/*     */
	
	JButton changename = new JButton("OK");
	JButton addmessage = new JButton("OK");
	JButton addcredit = new JButton("OK");
	JButton addtans = new JButton("OK");
	JPasswordField passwordfield = new JPasswordField();
	JMenuBar menuBar = new JMenuBar();
	JMenu infomenu = new JMenu("Your info");
	JMenu editmenu = new JMenu("Edit");
	JMenu positionmenu = new JMenu("Positions");
	//JMenu Applicants = new JMenu("Applicants");
	JMenu Messages = new JMenu("Messages");
	JMenu Exit = new JMenu("Sign out");
	int Current_user;
	ArrayList<Company> Users = new ArrayList<Company>();
	//ArrayList<Position> PUsers = new ArrayList<Position>();
	
	JMenuItem viewInfo = new JMenuItem("View your info");
	
	JMenuItem editPass = new JMenuItem("Edit your password");
	JMenuItem editUser = new JMenuItem("Edit your Name");
	
	JMenuItem addPostition = new JMenuItem("Add Postition");
	JMenuItem removePosition = new JMenuItem("Remove postition");
	JMenuItem editPostition = new JMenuItem("View Positions");
	
	JMenuItem viewMesseges = new JMenuItem("View sent messeges");
	JMenuItem sendMesseges = new JMenuItem("send messege");
	
//	JMenuItem viewApplicants = new JMenuItem("View Applicants");
	
	JMenuItem Signout = new JMenuItem("Sign out");
	
	
	
	HomePage2(int i, ArrayList<Company> Companies ){
		
		
		Current_user= i;
		Users = Companies;
		//PUsers = positions;
		infomenu.add(viewInfo);
		infomenu.add(editmenu);
		
		passwordfield.setBounds(250, 105, 125, 25);
		textfield.setBounds(250, 105, 125, 25);
		textfield2.setBounds(250, 80, 125, 25);
		
		PositionNameInput.setBounds(150, 130, 250, 25);
		PositionRequirements.setBounds(150, 180, 250, 25);
		CompanyName.setBounds(150, 230, 250, 25);
		
		PositionName.setBounds(10, 130, 160, 25);
		PositionReq.setBounds(10, 180, 160, 25);
		CompanyN.setBounds(10, 230, 250, 25);
		
		changepass.setBounds(20, 135, 100, 25);
		changepass.setFocusable(false);
		//changepass.addActionListener(this);
		
		addcredit.setBounds(20, 135, 100, 25);
		addcredit.setFocusable(false);
		//addcredit.addActionListener(this);
		
		changename.setBounds(20, 135, 100, 25);
		changename.setFocusable(false);
		//changename.addActionListener(this);
		
		addmessage.setBounds(20, 135, 100, 25);
		addmessage.setFocusable(false);
		//addmessage.addActionListener(this);
		
		addpositionOk.setBounds(100, 270, 100, 25);
		addmessage.setFocusable(false);
		deletepositionOk.setBounds(100, 150, 100, 25);
		
		addtans.setBounds(20, 135, 100, 25);
		addtans.setFocusable(false);
		//addtans.addActionListener(this);
		
		editmenu.add(editPass);
		editmenu.add(editUser);
		
		positionmenu.add(addPostition);
		positionmenu.add(removePosition);
		positionmenu.add(editPostition);
		
		
	//	Applicants.add(viewApplicants);
		
		Messages.add(viewMesseges);
		Messages.add(sendMesseges);
		
		Exit.add(Signout);
		
		menuBar.add(infomenu);
		menuBar.add(positionmenu);
		//menuBar.add(Applicants);
		menuBar.add(Messages);
		menuBar.add(Exit);
	
		
		viewInfo.addActionListener(this);
		editPass.addActionListener(this);
		editUser.addActionListener(this);
		addPostition.addActionListener(this);
		removePosition.addActionListener(this);

		Messages.addActionListener(this);
		viewMesseges.addActionListener(this);
		sendMesseges.addActionListener(this);
		Signout.addActionListener(this);
		changepass.addActionListener(this);
		changename.addActionListener(this);
		
		addpositionOk.addActionListener(this);
		deletepositionOk.addActionListener(this);
		
		frame.setJMenuBar(menuBar);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(500,500);
		frame.setLayout(null);
		frame.setVisible(true);
		Message.setText("Welcome " + Users.get(i).getName());
		Message.setBounds(10, 10, 250, 20);
		Message.setFont(new Font(null, Font.ITALIC, 16));
		Message2.setBounds(10, -35, 400, 300);
		Message3.setBounds(10, -50, 400, 300);
		/**/
	
		
		//////////////
		Message2.setFont(new Font(null, Font.PLAIN, 14));
		frame.add(Message);
		frame.add(Message2);
		frame.add(Message3);
		frame.add(addpositionOk);
		addpositionOk.setVisible(false);
		
		frame.add(deletepositionOk);
		deletepositionOk.setVisible(false);
		
		
		
}
   
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
		
		
		if(e.getSource() == viewInfo)
		{   PositionName.setVisible(false);
			Message3.setVisible(false);
			Message2.setVisible(true);
			textfield.setVisible(false);
			changename.setVisible(false);
			passwordfield.setVisible(false);
			changepass.setVisible(false);
			PositionNameInput.setVisible(false);
			addpositionOk.setVisible(false);
			deletepositionOk.setVisible(false);
			PositionReq.setVisible(false);
			PositionRequirements.setVisible(false);
			Message2.setText("<html>Username: " + Users.get(Current_user).getName() + "<br/>Password: " + Users.get(Current_user).getPassword() + "<br/>Gmail :"+ Users.get(Current_user).getEmail() +  "<br/>Profile:"+ Users.get(Current_user).getProfile() + Users.get(Current_user).getRequirements() + "<br/>Address:"+ Users.get(Current_user).getAddress() +"</html>");
		}
		if(e.getSource() == editPass)
		{
			Message2.setText("Enter the new Password: ");
			changepass.setVisible(true);
			passwordfield.setVisible(true);
			frame.add(passwordfield);
			frame.add(changepass);
		}
		if(e.getSource() == changepass)
		{
			Users.get(Current_user).setPassword(String.valueOf(passwordfield.getPassword()));
			if(String.valueOf(((JPasswordField) passwordfield).getPassword()).isEmpty()) {
				Message2.setText("Password cannot be empty");
			}else {
			Message2.setText("Done!");
			passwordfield.setText("");
			passwordfield.setVisible(false);
			changepass.setVisible(false);
			Serialize.Csave(Users);
			}
		}
		if(e.getSource() == editUser)
		{
			Message2.setText("Enter the new Name: ");
			changename.setVisible(true);
			textfield.setVisible(true);
			frame.add(textfield);
			frame.add(changename);
		}
		if(e.getSource() == changename)
		{
			if(textfield.getText().isEmpty()) {
				Message2.setText("Username cannot be empty");
			}else {
			Users.get(Current_user).setName(textfield.getText());
			Message.setText("Welcome " + Users.get(Current_user).getName());
			Message2.setText("Done!");
			textfield.setText("");
			textfield.setVisible(false);
			changename.setVisible(false);
			Serialize.Csave(Users);
			}
		}
		
		
		if(e.getSource() == addPostition)
		{   
			
			deletepositionOk.setVisible(false);
			Message.setVisible(false);
			Message2.setVisible(false);
			Message3.setVisible(true);
			addpositionOk.setVisible(true);
			PositionName.setVisible(true);
			PositionNameInput.setVisible(true);
			PositionReq.setVisible(true);
			PositionRequirements.setVisible(true);
			CompanyN.setFocusable(true);
			CompanyName.setVisible(true);
			Message3.setText("TO ADD A NEW POSITION PLEASE FILL IN THE DATA CAREFULLY: ");
			frame.add(PositionName);
			frame.add(PositionNameInput);
			
			frame.add(PositionReq);
			frame.add(PositionRequirements);
			
			frame.add(CompanyName);
			frame.add(CompanyN);
			
			frame.add(addpositionOk);
			
		PositionName.setText("Position Name: ");
		PositionReq.setText("requirements : ");
		CompanyN.setText("company Name: ");
		}
		
		/////////////////////////////////////
		if(e.getSource() == addpositionOk)
		{
			
			if(PositionNameInput.getText().isEmpty() || PositionNameInput.getText().isEmpty() ) {
			Message3.setText("position cannot be empty");
			}
		/*	else if (Users.get(Current_user).Position_Is_Exits(positions)){
				 Message3.setText("position is already existed");
			}*/
			else {
				Position P = new Position();
				P.setName(textfield.getText());
			//	Users.get(Current_user).AddPosition(Users);
			ArrayList<Position> ps = new ArrayList<Position>();
			ps.addAll(Users.get(Current_user).getpositions());
			ps.add(P);
			Users.get(Current_user).setpositions(ps);
			
			//Users.get(Current_user).set(textfield.getText());
			//Message.setText("Welcome " + Users.get(Current_user).getName());
			Message3.setVisible(false);
			PositionName.setText("Done!");
			PositionNameInput.setText("");
			PositionNameInput.setVisible(false);
			addpositionOk.setVisible(false);
			PositionReq.setVisible(false);
			PositionRequirements.setVisible(false);
			addpositionOk.setVisible(false);
			CompanyName.setVisible(false);
			CompanyN.setVisible(false);
			Serialize.Csave(Users);
			
			}
		}
		/////////////////////////////////////////////
		if(e.getSource() == removePosition)
		{
			
			//Users.get(Current_user).RemovePosition(positions);
			CompanyN.setVisible(false);
			CompanyName.setVisible(false);
			PositionName.setVisible(true);
			PositionName.setText("Applicant Gmail :");
			PositionNameInput.setText("");
			PositionNameInput.setVisible(true);
			PositionReq.setVisible(false);
			PositionRequirements.setVisible(false);
			Message.setVisible(false);
			Message2.setVisible(false);
			addpositionOk.setVisible(false);
			Message3.setVisible(true);
			addpositionOk.setVisible(true);
			Message3.setText("TO REMOVE A POSITION PLEASE ENTER THE POSITION : ");
			frame.add(PositionName);
			frame.add(PositionNameInput);
			frame.add(deletepositionOk);
		}
		
		/////////////////////////////////////////
		ArrayList<Position> positions = new ArrayList<Position>();

		
		if(e.getSource() ==sendMesseges) {
			CompanyN.setVisible(false);
			CompanyName.setVisible(false);
			PositionName.setVisible(true);
			PositionName.setText("Position Name");
			PositionNameInput.setText("");
			PositionNameInput.setVisible(true);
			PositionReq.setVisible(false);
			PositionRequirements.setVisible(false);
			Message.setVisible(false);
			Message2.setVisible(false);
			addpositionOk.setVisible(false);
			Message3.setVisible(true);
			addpositionOk.setVisible(true);
			Message3.setText("TO Send A Message Please enter the Applicant Gmail: ");
			frame.add(PositionName);
			frame.add(PositionNameInput);
			frame.add(deletepositionOk);
			
		}
	
		
	}
	
	


}
